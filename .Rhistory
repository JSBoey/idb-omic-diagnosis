write_csv(rownames_to_column(df, "ASV"),
str_glue("{results_dir}/aldex2_status.ASV.{gene}.csv"))
})
walk2(comp_B, names(comp_A), \(df, gene) {
write_csv(rownames_to_column(df, "ASV"),
str_glue("{results_dir}/aldex2_status.genus.{gene}.csv"))
})
walk(comp_A, \(x) {
aldex.plot(x, type = "volcano", test = "wilcox", main = "MA plot")
})
walk(comp_A, \(x) {
aldex.plot(x, type = "volcano", test = "welch", main = "MA plot")
})
par(mfrow = c(1, 2))
walk(comp_A, names(comp_A), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
walk(comp_A, names(comp_A), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
gc()
walk2(comp_A, names(comp_A), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
par(mfrow = c(1, 2))
walk2(comp_A, names(comp_A), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
walk2(comp_B, names(comp_B), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
comp_A <- map(COUNTS, \(m) {
covariates <- dplyr::filter(METADATA, sample %in% colnames(m))
g <- as.character(covariates$status)
x <- aldex.clr(m, g, mc.samples = 1e3, verbose = TRUE, gamma = 0.25)
tt <- aldex.ttest(x, hist.plot = FALSE, paired.test = FALSE, verbose = TRUE)
eff <- aldex.effect(x, CI = TRUE, paired.test = FALSE, verbose = TRUE)
data.frame(tt, eff)
})
par(mfrow = c(1, 2))
walk2(comp_A, names(comp_A), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
walk2(comp_A, names(comp_A), \(df, gene) {
write_csv(rownames_to_column(df, "ASV"),
str_glue("{results_dir}/aldex2_status.ASV.{gene}.csv"))
})
# At ASV level, there are no differentially abundant ASVs between health status, but there are a few taxa that are differentially abundant between individuals.
# Comparison between status at genus level
comp_B <-  map2(COUNTS, TAXONOMY[c("16S.Greengenes2", "ITS.UNITE")], \(m, tx) {
covariates <- dplyr::filter(METADATA, sample %in% colnames(m))
g <- as.character(covariates$status)
m <- left_join(
as_tibble(m, rownames = "ASV"),
dplyr::select(tx, -Confidence),
by = join_by("ASV" == "Feature ID")
) %>%
group_by(Genus) %>%
summarise(across(where(is.numeric), sum)) %>%
dplyr::filter(!(is.na(Genus) | grepl("^g__$", Genus))) %>%
column_to_rownames("Genus") %>%
as.matrix()
x <- aldex.clr(m, g, mc.samples = 1e3, verbose = TRUE, gamma = 0.25)
tt <- aldex.ttest(x, hist.plot = FALSE, paired.test = FALSE, verbose = TRUE)
eff <- aldex.effect(x, CI = TRUE, paired.test = FALSE, verbose = TRUE)
data.frame(tt, eff)
})
par(mfrow = c(1, 2))
walk2(comp_B, names(comp_B), \(x, nm) {
aldex.plot(x, type = "volcano", test = "welch",
main = str_glue("Volcano plot for {nm}"))
})
walk2(comp_B, names(comp_A), \(df, gene) {
write_csv(rownames_to_column(df, "ASV"),
str_glue("{results_dir}/aldex2_status.genus.{gene}.csv"))
})
source("C:/Users/jboe440/OneDrive/Current items/Projects/idb-omic-diagnosis/scripts/analyses/0.data_prep.R", echo=TRUE)
gc()
raw_reads <- read_csv("data/raw_reads.csv")
View(raw_reads)
trimmed_reads <- list.files("data/", pattern = "_trimmed_reads.csv") %>%
map(\(i) read_csv(i, col_names = col_names))
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files("data/", pattern = "_trimmed_reads.csv") %>%
map(\(i) read_csv(i, col_names = col_names))
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names))
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
View(trimmed_reads)
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names) %>%
mutate(sample = str_remove(sample, "_.*"))
col_names <- c("sample", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names) %>%
mutate(sample = str_remove(sample, "_.*"))
col_names <- c("sample", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
all_reads <- list(
"raw" = raw_reads,
"trimmed" = trimmed_reads
)
rm(raw_reads, trimmed_reads)
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
all_reads <- list(
"raw" = raw_reads,
"trimmed" = trimmed_reads
)
rm(raw_reads, trimmed_reads)
all_reads <- map(all_reads, \(tb) {
mutate(tb,
sample = str_extract(file, "^[^_]"))
})
View(all_reads)
View(all_reads[["raw"]])
all_reads <- map(all_reads, \(tb) {
mutate(tb,
sample = str_extract(file, "^[^_]\\+"))
})
View(all_reads[["raw"]])
all_reads <- map(all_reads, \(tb) {
mutate(tb,
sample = str_extract(file, "^[^_]+"))
})
View(all_reads[["raw"]])
all_reads <- map(all_reads, \(tb) {
mutate(tb,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1"))
})
View(all_reads[["raw"]])
all_reads <- map(all_reads, \(tb) {
mutate(tb,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1"))
}) %>%
list_rbind(names_to = "process")
ggplot(all_reads, aes(x = sample, y = depth, fill = pair)) +
geom_col() +
facet_wrap(~ process)
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
View(raw_reads)
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1"))
trimmed_reads <- mutate(trimmed_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"))
View(trimmed_reads)
trimmed_reads <- mutate(trimmed_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, "\\.([12]).fq.gz", "\\1"))
trimmed_reads <- mutate(trimmed_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*\\.([12]).fq.gz", "\\1"))
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(-pair)
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(pick(-pair)) %>%
distinct()
View(raw_reads)
?pick
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(vars(-pair)) %>%
distinct()
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(vars(-pair)) %>%
distinct()
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(across(-pair)) %>%
distinct()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
dplyr::filter(pair == "1")
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
group_by(across(-c(pair, file))) %>%
distinct()
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
dplyr::select(-c(pair, file)) %>%
distinct()
trimmed_reads <- mutate(trimmed_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*\\.([12]).fq.gz", "\\1")) %>%
dplyr::select(-c(pair, file)) %>%
distinct()
all_reads <- left_join(raw_reads, trimmed_reads)
# Sequencing
col_names <- c("file", "depth")
raw_reads <- read_csv("data/raw_reads.csv", col_names = col_names)
trimmed_reads <- list.files(path = "data/",
pattern = "_trimmed_reads.csv",
full.names = TRUE) %>%
map(\(i) read_csv(i, col_names = col_names)) %>%
list_rbind()
raw_reads <- mutate(raw_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*L1.([12]).fq.gz", "\\1")) %>%
dplyr::select(-c(pair, file)) %>%
distinct()
trimmed_reads <- mutate(trimmed_reads,
sample = str_extract(file, "^[^_]+"),
gene = str_extract(file, "(16S|ITS)"),
pair = str_replace(file, ".*\\.([12]).fq.gz", "\\1")) %>%
dplyr::select(-c(pair, file)) %>%
distinct()
all_reads <- left_join(raw_reads, trimmed_reads,
by = join_by(c("sample", "gene")),
suffix = c("_raw", "_trimmed"))
all_reads <- left_join(raw_reads, trimmed_reads,
by = c("sample", "gene")),
all_reads <- left_join(raw_reads, trimmed_reads,
by = c("sample", "gene"),
suffix = c("_raw", "_trimmed"))
View(all_reads)
all_reads <- left_join(raw_reads, trimmed_reads,
by = c("sample", "gene"),
suffix = c("_raw", "_trimmed")) %>%
pivot_longer(where(is.numeric), names_to = "process", values_to = "depth")
View(all_reads)
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col() +
facet_grid(~ gene)
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process,
group = process)) +
geom_col() +
facet_grid(~ gene)
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(~ gene)
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(~ gene) +
coord_flip()
ggplot(all_reads, aes(x = sample,
y = log10(depth),
fill = process)) +
geom_col(position = "dodge") +
facet_grid(~ gene) +
coord_flip()
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(~ gene) +
coord_flip()
ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(process ~ gene) +
coord_flip()
fig <- ggplot(all_reads, aes(x = sample,
y = depth,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(process ~ gene) +
coord_flip()
walk(fig_formats, \(fmt) {
filename <- str_glue("{results_dir}/figure.sequence_depth.{fmt}")
ggsave(filename,
plot = fig,
width = 2,
height = 2,
scale = 2,
dpi = 600)
})
fig <- ggplot(all_reads, aes(x = sample,
y = depth/1e5,
fill = process)) +
geom_col(position = "dodge") +
facet_grid(process ~ gene) +
coord_flip()
fig
fig <- ggplot(all_reads, aes(x = sample,
y = depth/1e5,
fill = process)) +
geom_col(position = "dodge") +
labs(y = "Number of reads (x 10,000)",
x = "Sample") +
facet_grid(process ~ gene) +
coord_flip()
fig
fig <- ggplot(all_reads, aes(x = sample,
y = depth/1e5,
fill = process)) +
geom_col(position = "dodge") +
labs(y = "Number of reads (x 10,000)",
x = "Sample",
fill = "") +
scale_fill_discrete(labels = c("Raw", "Trimmed")) +
facet_grid(process ~ gene) +
coord_flip()
fig
ggsave(filename,
plot = fig,
width = 3,
height = 3,
scale = 2,
dpi = 600)
walk(fig_formats, \(fmt) {
filename <- str_glue("{results_dir}/figure.sequence_depth.{fmt}")
ggsave(filename,
plot = fig,
width = 3,
height = 3,
scale = 2,
dpi = 600)
})
walk(fig_formats, \(fmt) {
filename <- str_glue("{results_dir}/figure.sequence_depth.{fmt}")
ggsave(filename,
plot = fig,
width = 3,
height = 3.5,
scale = 2,
dpi = 600)
})
dist_matrix <- list(
"UniFrac" = map2(RCOUNTS, PHYLOGENY, \(m, tr) {
rbiom::unifrac(m, weighted = TRUE, tree = tr)
}),
"Bray_Curtis" = map(RCOUNTS, \(m) {
vegdist(t(m))
}),
"Robust_Aitchison" = map(COUNTS, \(m) {
vegdist(t(m), method = "robust.aitchison")
})
)
?rda
?imap
partial_RDA <- list_flatten(dist_matrix)
View(partial_RDA)
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
if (grepl("Robust", nm)) {
rclr <- map(COUNTS, \(m) decostand(t(m), method = "rclr", MARGIN = 2))
o <- map(rclr, \(m) {
data <- dplyr::filter(METADATA, sample %in% rownames(m))
rda(m ~ status + Condition(individual), data)
})
return(o)
}
map(d, \(D) {
data <- dplyr::filter(METADATA, sample %in% rownames(m))
dbrda(d ~ status + Condition(individual), data)
})
})
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
if (grepl("Robust", nm)) {
rclr <- map(COUNTS, \(m) decostand(t(m), method = "rclr", MARGIN = 2))
o <- map(rclr, \(m) {
data <- dplyr::filter(METADATA, sample %in% rownames(m))
rda(m ~ status + Condition(individual), data)
})
return(o)
}
map(d, \(D) {
data <- dplyr::filter(METADATA, sample %in% labels(m))
dbrda(d ~ status + Condition(individual), data)
})
})
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
if (grepl("Robust", nm)) {
rclr <- map(COUNTS, \(m) decostand(t(m), method = "rclr", MARGIN = 2))
o <- map(rclr, \(m) {
data <- dplyr::filter(METADATA, sample %in% rownames(m))
rda(m ~ status + Condition(individual), data)
})
return(o)
}
map(d, \(D) {
data <- dplyr::filter(METADATA, sample %in% labels(D))
dbrda(D ~ status + Condition(individual), data)
})
})
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
if (grepl("Robust", nm)) {
rclr <- map(COUNTS, \(m) decostand(t(m), method = "rclr", MARGIN = 2))
o <- map(rclr, \(m) {
data <- dplyr::filter(METADATA, sample %in% rownames(m))
rda(m ~ status + Condition(individual), data)
})
return(o)
}
data <- dplyr::filter(METADATA, sample %in% labels(d))
dbrda(d ~ status + Condition(individual), data)
})
partial_RDA
View(partial_RDA)
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
data <- dplyr::filter(METADATA, sample %in% labels(d))
if (grepl("Robust", nm)) {
m <- COUNTS[[str_extract(nm, "(16S|ITS)")]]
rclr <- decostand(t(m), method = "rclr", MARGIN = 2)
o <- rda(m ~ status + Condition(individual), data)
return(o)
}
dbrda(d ~ status + Condition(individual), data)
})
partial_RDA <- list_flatten(dist_matrix) %>%
imap(\(d, nm) {
data <- dplyr::filter(METADATA, sample %in% labels(d))
if (grepl("Robust", nm)) {
m <- COUNTS[[str_extract(nm, "(16S|ITS)")]]
rclr <- decostand(t(m), method = "rclr", MARGIN = 2)
o <- rda(rclr ~ status + Condition(individual), data)
return(o)
}
dbrda(d ~ status + Condition(individual), data)
})
partial_RDA
View(partial_RDA)
map(partial_RDA, permutest)
map(partial_RDA, anova.cca)
